#if !defined(_TCSAM02_)
#  define _TCSAM02_

class model_data : public ad_comm{
  int nZBs;
  int mnYr;
  int mxYr;
  int mxYrp1;
  int nFsh;
  int nSrv;
  dvector zBs;
  ivector mapD2MFsh;
  ivector mapM2DFsh;
  ivector mapD2MSrv;
  ivector mapM2DSrv;
  ivector mapD2MChd;
  int npLnR;
  ivector phsLnR;
  dvector lbLnR;
  dvector ubLnR;
  int npRCV;
  ivector phsRCV;
  dvector lbRCV;
  dvector ubRCV;
  int npRX;
  ivector phsRX;
  dvector lbRX;
  dvector ubRX;
  int npRa;
  ivector phsRa;
  dvector lbRa;
  dvector ubRa;
  int npRb;
  ivector phsRb;
  dvector lbRb;
  dvector ubRb;
  int npDevsLnR;
  ivector mniDevsLnR;
  ivector mxiDevsLnR;
  imatrix idxsDevsLnR;
  dvector lbDevsLnR;
  dvector ubDevsLnR;
  ivector phsDevsLnR;
  int npM;
  ivector phsM;
  dvector lbM;
  dvector ubM;
  int npDM1;
  ivector phsDM1;
  dvector lbDM1;
  dvector ubDM1;
  int npDM2;
  ivector phsDM2;
  dvector lbDM2;
  dvector ubDM2;
  int npDM3;
  ivector phsDM3;
  dvector lbDM3;
  dvector ubDM3;
  int npDM4;
  ivector phsDM4;
  dvector lbDM4;
  dvector ubDM4;
  double zMref;
  int npLgtPrMat;
  ivector mniLgtPrMat;
  ivector mxiLgtPrMat;
  imatrix idxsLgtPrMat;
  dvector lbLgtPrMat;
  dvector ubLgtPrMat;
  ivector phsLgtPrMat;
  int npGrA;
  ivector phsGrA;
  dvector lbGrA;
  dvector ubGrA;
  int npGrB;
  ivector phsGrB;
  dvector lbGrB;
  dvector ubGrB;
  int npGrBeta;
  ivector phsGrBeta;
  dvector lbGrBeta;
  dvector ubGrBeta;
  int npS1;
  ivector phsS1;
  dvector lbS1;
  dvector ubS1;
  int npS2;
  ivector phsS2;
  dvector lbS2;
  dvector ubS2;
  int npS3;
  ivector phsS3;
  dvector lbS3;
  dvector ubS3;
  int npS4;
  ivector phsS4;
  dvector lbS4;
  dvector ubS4;
  int npS5;
  ivector phsS5;
  dvector lbS5;
  dvector ubS5;
  int npS6;
  ivector phsS6;
  dvector lbS6;
  dvector ubS6;
  int npDevsS1;
  ivector mniDevsS1;
  ivector mxiDevsS1;
  imatrix idxsDevsS1;
  dvector lbDevsS1;
  dvector ubDevsS1;
  ivector phsDevsS1;
  int npDevsS2;
  ivector mniDevsS2;
  ivector mxiDevsS2;
  imatrix idxsDevsS2;
  dvector lbDevsS2;
  dvector ubDevsS2;
  ivector phsDevsS2;
  int npDevsS3;
  ivector mniDevsS3;
  ivector mxiDevsS3;
  imatrix idxsDevsS3;
  dvector lbDevsS3;
  dvector ubDevsS3;
  ivector phsDevsS3;
  int npDevsS4;
  ivector mniDevsS4;
  ivector mxiDevsS4;
  imatrix idxsDevsS4;
  dvector lbDevsS4;
  dvector ubDevsS4;
  ivector phsDevsS4;
  int npDevsS5;
  ivector mniDevsS5;
  ivector mxiDevsS5;
  imatrix idxsDevsS5;
  dvector lbDevsS5;
  dvector ubDevsS5;
  ivector phsDevsS5;
  int npDevsS6;
  ivector mniDevsS6;
  ivector mxiDevsS6;
  imatrix idxsDevsS6;
  dvector lbDevsS6;
  dvector ubDevsS6;
  ivector phsDevsS6;
  int npNPSel;
  ivector mniNPSel;
  ivector mxiNPSel;
  imatrix idxsNPSel;
  dvector lbNPSel;
  dvector ubNPSel;
  ivector phsNPSel;
  int npHM;
  ivector phsHM;
  dvector lbHM;
  dvector ubHM;
  int npLnC;
  ivector phsLnC;
  dvector lbLnC;
  dvector ubLnC;
  int npDC1;
  ivector phsDC1;
  dvector lbDC1;
  dvector ubDC1;
  int npDC2;
  ivector phsDC2;
  dvector lbDC2;
  dvector ubDC2;
  int npDC3;
  ivector phsDC3;
  dvector lbDC3;
  dvector ubDC3;
  int npDC4;
  ivector phsDC4;
  dvector lbDC4;
  dvector ubDC4;
  int npDevsLnC;
  ivector mniDevsLnC;
  ivector mxiDevsLnC;
  imatrix idxsDevsLnC;
  dvector lbDevsLnC;
  dvector ubDevsLnC;
  ivector phsDevsLnC;
  int npLnEffX;
  ivector phsLnEffX;
  dvector lbLnEffX;
  dvector ubLnEffX;
  int npLgtRet;
  ivector phsLgtRet;
  dvector lbLgtRet;
  dvector ubLgtRet;
  int npQ;
  ivector phsQ;
  dvector lbQ;
  dvector ubQ;
  int npDQ1;
  ivector phsDQ1;
  dvector lbDQ1;
  dvector ubDQ1;
  int npDQ2;
  ivector phsDQ2;
  dvector lbDQ2;
  dvector ubDQ2;
  int npDQ3;
  ivector phsDQ3;
  dvector lbDQ3;
  dvector ubDQ3;
  int npDQ4;
  ivector phsDQ4;
  dvector lbDQ4;
  dvector ubDQ4;
  int npMSE_LnC;
  ivector phsMSE_LnC;
  dvector lbMSE_LnC;
  dvector ubMSE_LnC;
  dvector dtF_y;
  dvector dtM_y;
  int nEASs;
  imatrix yrsAvgEff_ny;
  dmatrix eff_ny;
  dvector avgEff_n;
  int nCRASs;
  d5_array obsEff_nxmsy;
  int npcRec;
  int npcNM;
  int npcM2M;
  int npcGrw;
  int npcSel;
  int npcFsh;
  int npcSrv;
  ivector nDevsLnR_c;
  dmatrix zGrA_xy;
  dmatrix zGrB_xy;
  imatrix idxDevsLnC_fy;
  imatrix hasF_fy;
  int ctrProcCalls;
  int ctrProcCallsInPhase;
  double prjR;
  double inpOFL;
  double inpTAC;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int hessian_phase(void)
  {
    return initial_params::in_hessian_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable& current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  dvariable adromb(dvariable(model_parameters::*f)(const dvariable&), double a, double b, int ns)
  {
    using namespace std::placeholders;
    _func func = std::bind(f, this, _1);
    return function_minimizer::adromb(func, a, b, ns);
  }
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_number_vector pLnR;
  param_init_bounded_number_vector pRCV;
  param_init_bounded_number_vector pRX;
  param_init_bounded_number_vector pRa;
  param_init_bounded_number_vector pRb;
  param_init_bounded_vector_vector pDevsLnR;
  param_matrix devsLnR;
  param_init_bounded_number_vector pM;
  param_init_bounded_number_vector pDM1;
  param_init_bounded_number_vector pDM2;
  param_init_bounded_number_vector pDM3;
  param_init_bounded_number_vector pDM4;
  param_init_bounded_number_vector pGrA;
  param_init_bounded_number_vector pGrB;
  param_init_bounded_number_vector pGrBeta;
  param_init_bounded_vector_vector pvLgtPrM2M;
  param_init_bounded_number_vector pS1;
  param_init_bounded_number_vector pS2;
  param_init_bounded_number_vector pS3;
  param_init_bounded_number_vector pS4;
  param_init_bounded_number_vector pS5;
  param_init_bounded_number_vector pS6;
  param_init_bounded_vector_vector pDevsS1;
  param_init_bounded_vector_vector pDevsS2;
  param_init_bounded_vector_vector pDevsS3;
  param_init_bounded_vector_vector pDevsS4;
  param_init_bounded_vector_vector pDevsS5;
  param_init_bounded_vector_vector pDevsS6;
  param_matrix devsS1;
  param_matrix devsS2;
  param_matrix devsS3;
  param_matrix devsS4;
  param_matrix devsS5;
  param_matrix devsS6;
  param_init_bounded_vector_vector pvNPSel;
  param_init_bounded_number_vector pHM;
  param_init_bounded_number_vector pLnC;
  param_init_bounded_number_vector pDC1;
  param_init_bounded_number_vector pDC2;
  param_init_bounded_number_vector pDC3;
  param_init_bounded_number_vector pDC4;
  param_init_bounded_vector_vector pDevsLnC;
  param_init_bounded_number_vector pLnEffX;
  param_init_bounded_number_vector pLgtRet;
  param_matrix devsLnC;
  param_init_bounded_number_vector pQ;
  param_init_bounded_number_vector pDQ1;
  param_init_bounded_number_vector pDQ2;
  param_init_bounded_number_vector pDQ3;
  param_init_bounded_number_vector pDQ4;
  param_init_bounded_number_vector pMSE_LnC;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value objFun;
  param_matrix spB_yx;
  param_5array n_yxmsz;
  param_5array nmN_yxmsz;
  param_5array tmN_yxmsz;
  param_number initMnR;
  param_vector R_y;
  param_vector Rx_c;
  param_matrix R_yx;
  param_matrix R_cz;
  param_matrix R_yz;
  param_3array R_yxz;
  param_vector stdvDevsLnR_c;
  param_matrix devsLnR_cy;
  param_matrix zscrDevsLnR_cy;
  param_vector M_c;
  param_5array M_yxmsz;
  param_matrix prM2M_cz;
  param_3array prM2M_yxz;
  param_matrix mnGrZ_cz;
  param_3array prGr_czz;
  param_4array mnGrZ_yxsz;
  param_5array prGr_yxszz;
  param_matrix grA_xy;
  param_matrix grB_xy;
  param_matrix grBeta_xy;
  param_matrix npSel_cz;
  param_matrix sel_cz;
  param_3array sel_cyz;
  param_4array avgFc_nxms;
  param_4array avgFc2Eff_nxms;
  param_5array obsFc_nxmsy;
  param_5array prdFc_nxmsy;
  param_5array prdEff_nxmsy;
  param_5array zscrEffX_nxmsy;
  param_4array nllEffX_nxms;
  param_matrix hmF_fy;
  param_matrix dvsLnC_fy;
  param_5array cpF_fyxms;
  param_6array sel_fyxmsz;
  param_6array ret_fyxmsz;
  param_6array cpF_fyxmsz;
  param_6array rmF_fyxmsz;
  param_6array dmF_fyxmsz;
  param_5array tmF_yxmsz;
  param_6array cpN_fyxmsz;
  param_6array dsN_fyxmsz;
  param_6array rmN_fyxmsz;
  param_6array dmN_fyxmsz;
  param_6array cpB_fyxmsz;
  param_6array dsB_fyxmsz;
  param_6array rmB_fyxmsz;
  param_6array dmB_fyxmsz;
  param_3array mb_vyx;
  param_5array q_vyxms;
  param_6array a_vyxmsz;
  param_6array s_vyxmsz;
  param_6array q_vyxmsz;
  param_6array n_vyxmsz;
  param_6array b_vyxmsz;
  param_vector prj_hmF_f;
  param_4array prj_capF_fmsz;
  param_4array prj_retF_fmsz;
  param_4array prj_selF_fmsz;
  param_vector prj_spB_x;
  param_4array prj_n_xmsz;
  param_5array prj_cpN_fxmsz;
  param_5array prj_rmN_fxmsz;
  param_5array prj_dmN_fxmsz;
  param_5array prj_dsN_fxmsz;
  param_matrix prjRetCatchMortBio_fx;
  param_matrix prjDscCatchMortBio_fx;
  param_matrix prjTotCatchMortBio_fx;
  param_5array prj_n_vxmsz;
  param_vector fPenRecDevs;
  param_vector fPenSmoothLgtPrMat;
  param_vector fPenNonDecLgtPrMat;
  param_vector fPenSmoothNPSel;
  param_vector fPenDevsS1;
  param_vector fPenDevsS2;
  param_vector fPenDevsS3;
  param_vector fPenDevsS4;
  param_vector fPenDevsS5;
  param_vector fPenDevsS6;
  param_vector fPenDevsLnC;
  param_vector R_z;
  param_3array S1_msz;
  param_matrix Th_sz;
  param_3array T_szz;
  param_3array S2_msz;
  param_4array n_xmsz;
  param_stddev_vector sdrLnR_y;
  param_stddev_matrix sdrSpB_xy;
  param_likeprof_number lkMMB;
  param_likeprof_number lkQM;
  param_likeprof_number lkQF;
  param_likeprof_number lkNMIM;
  param_likeprof_number lkNMIF;
  param_likeprof_number lkNMMM;
  param_likeprof_number lkNMMF;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void);
 void runAltPopDyMod(int debug, ostream& cout);
 void initAltPopDyMod(int debug, ostream& cout);
 void runAltPopDyModOneYear(int y, int x, int debug, ostream& cout);
 void projectPopForTAC(dvariable& mseCapF, int debug, ostream& cout);
 void projectPopForZeroTAC(int debug, ostream& cout);
 void runPopDyMod(int debug, ostream& cout);
 void initPopDyMod(int debug, ostream& cout);
 void runPopDyModOneYear(int y, int debug, ostream& cout);
 void doSurveys(int y,int debug,ostream& cout);
 dvar_vector calcSpB(dvar4_array& n0_xmsz, int y, int debug, ostream& cout);
 dvar4_array applyNatMort(dvar4_array& n0_xmsz, int y, double dt, int debug, ostream& cout);
 dvar4_array applyFshMort(dvar4_array& n0_xmsz, int y, int debug, ostream& cout);
 dvar4_array applyMGM(dvar4_array& n0_xmsz, int y, int debug, ostream& cout);
 void calcRecruitment(int debug, ostream& cout);
 void calcNatMort(int debug, ostream& cout);
 void calcPrM2M(int debug, ostream& cout);
 void calcGrowth(int debug, ostream& cout);
 void calcSelectivities(int debug, ostream& cout);
 void calcFisheryFs(int debug, ostream& cout);
 void calcSurveyQs(int debug, ostream& cout);
 void calcEqNatZF100(dvariable& R, int yr, int debug, ostream& cout);
 dvar3_array calcEqNatZ(dvar_vector& R_z,dvar3_array& S1_msz, dvar_matrix& Th_sz, dvar3_array& T_szz, dvar3_array& S2_msz, int debug, ostream& cout);
 d5_array calcCohortProgression(int yr, int debug, ostream& cout);
 void calcOFL(int yr, int debug, ostream& cout);
 void calcOFL_OpMod(int debug, ostream& cout);
 void calcPenalties(int debug, ostream& cout);
 void calcDevsPenalties(int debug, ostream& cout, double penWgt, param_init_bounded_vector_vector& pDevs, dvar_matrix devs);
 dvar_vector calc1stDiffs(const dvar_vector& d);
 dvar_vector calc2ndDiffs(const dvar_vector& d);
 void calcNLLs_Recruitment(int debug, ostream& cout);
 void calcObjFunForTAC(int debug, ostream& cout);
 void calcObjFun(int debug, ostream& cout);
 void calcNLLs_ChelaHeightData(int debug, ostream& cout);
 void calcNLLs_GrowthData(int debug, ostream& cout);
 void testNaNs(double v, adstring str);
 void calcNorm2NLL(double wgt, dvar_vector& mod, dvector& obs, dvector& stdv, ivector& yrs, int debug, ostream& cout);
 void calcNormalNLL(double wgt, dvar_vector& mod, dvector& obs, dvector& stdv, ivector& yrs, int debug, ostream& cout);
 void calcLognormalNLL(double wgt, dvar_vector& mod, dvector& obs, dvector& stdv, ivector& yrs, int debug, ostream& cout);
 void calcNoneNLL(double wgt, dvar_vector& mod, dvector& obs, dvector& stdv, ivector& yrs, int debug, ostream& cout);
 void calcMultinomialNLL(double wgt, dvar_vector& mod, dvector& obs, double& ss, int& yr, int debug, ostream& cout);
 void calcNoneNLL(double wgt, dvar_vector& mod, dvector& obs, double& ss, int& yr, int debug, ostream& cout);
 void calcNLL(int llType, double wgt, dvar_vector& mod, dvector& obs, dvector& stdv, ivector& yrs, int debug, ostream& cout);
 void calcNLL(int llType, double wgt, dvar_vector& mod, dvector& obs, double& ss, int& yr, int debug, ostream& cout);
 void calcNLLs_AggregateCatch(AggregateCatchData* ptrAB, dvar5_array& mA_yxmsz, int debug, ostream& cout);
 d5_array calcNLLs_CatchNatZ(SizeFrequencyData* ptrZFD, dvar5_array& mA_yxmsz, int debug, ostream& cout);
 dvector calcEffWgtComponents(double ss, dvector& obs, dvar_vector& mod, int debug, ostream& cout);
 void calcNLLs_Fisheries(int debug, ostream& cout);
 void calcNLLs_ExtrapolatedEffort(int debug, ostream& cout);
 void calcNLLs_Surveys(int debug, ostream& cout);
 void calcAllPriors(int debug, ostream& cout);
 void setInitVals(int debug, ostream& os);
 int checkParams(int debug, ostream& os);
 int checkParams(NumberVectorInfo* pI, param_init_number_vector& p, int debug, ostream& cout);
 int checkParams(BoundedNumberVectorInfo* pI, param_init_bounded_number_vector& p, int debug, ostream& cout);
 int checkParams(BoundedVectorVectorInfo* pI, param_init_bounded_vector_vector& p, int debug, ostream& cout);
 int checkParams(DevsVectorVectorInfo* pI, param_init_bounded_vector_vector& p, int debug, ostream& cout);
  void writeMCMCHeader(void);
 void writeMCMCtoR(ostream& mcmc,NumberVectorInfo* ptr);
 void writeMCMCtoR(ostream& mcmc,BoundedNumberVectorInfo* ptr);
 void writeMCMCtoR(ostream& mcmc,BoundedVectorVectorInfo* ptr);
 void writeMCMCtoR(ostream& mcmc,DevsVectorVectorInfo* ptr);
 void writeMCMCtoR(ofstream& mcmc);
 void createSimData(int debug, ostream& cout, int iSimDataSeed, ModelDatasets* ptrSim);
 void writeSimData(ostream& os, int debug, ostream& cout, ModelDatasets* ptrSim);
 void setInitVals(NumberVectorInfo* pI, param_init_number_vector& p, int usePin, int debug, ostream& os);
 void setInitVals(BoundedNumberVectorInfo* pI, param_init_bounded_number_vector& p, int usePin, int debug, ostream& os);
 void setInitVals(BoundedVectorVectorInfo* pI, param_init_bounded_vector_vector& p, int usePin, int debug, ostream& os);
 void setInitVals(DevsVectorVectorInfo* pI, param_init_bounded_vector_vector& p, int usePin, int debug, ostream& os);
 void setAllDevs(int debug, ostream& cout);
 void ReportToR_Data(ostream& os, int debug, ostream& cout);
 void ReportToR_Params(ostream& os, int debug, ostream& cout);
 void ReportToR_ModelProcesses(ostream& os, int debug, ostream& cout);
 void ReportToR_ModelResults(ostream& os, int debug, ostream& cout);
 void ReportToR_CohortProgression(ostream& os,  int debug, ostream& cout);
 void ReportToR_ModelFits(ostream& os, double maxGrad, int debug, ostream& cout);
 void updateMPI(int debug, ostream& cout);
 void ReportToR(ostream& os, double maxGrad, int debug, ostream& cout);
 void writeParameters(ostream& os,int toR, int willBeActive);
  void between_phases_calculations(void);
 void reWeightSurveySizeComps(int debug,ostream& cout);
 void reWeightFisherySizeComps(int debug,ostream& cout);
 void calcWeightsForSurveySizeComps(int debug, ostream& cout);
 void calcWeightsForFisherySizeComps(int debug, ostream& cout);
 d4_array calcEffWgts(d5_array& effWgtComps,int debug, ostream& cout);
  void save_params(void);
 void calcDynB0(int debug, ostream& cout);
 void writeStateForOpMod(int y,ostream& os);
 void writeEstModPinFile(int closed, ostream& os);
 int calcTAC(int hcr, double OFL);
 double repTAC(int hcr, double OFL);
 int calcTAC_OpMod(int hcr, double OFL);
 double repTAC_OpMod(int hcr, double OFL);
  void finishOpModMode(void);

};
#endif
